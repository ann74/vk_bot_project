version: "3.9"

volumes:
    pg_vk:
    rb_vk:

services:
  pg_vk:
    image: postgres:14.6-alpine
    ports:
      - 5432:5432
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 5s
      timeout: 5s
      retries: 5


  rb_vk:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    env_file:
      - ./.env
    environment:
      RABBITMQ_DEFAULT_USER: ${RB_USER}
      RABBITMQ_DEFAULT_PASS: ${RB_PASSWORD}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit log_levels [{connection,error},{default,error}] disk_free_limit 1073741824
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 5

#  app:
#    build:
#      context: .
#    restart: always
#    volumes:
#      - ./:/app
#    command: sh -c "python main.py"
#    ports:
#      - "8080:8080"
#    depends_on:
#      pg_vk:
#        condition: service_healthy
#      rb_vk:
#        condition: service_healthy

